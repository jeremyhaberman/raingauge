package com.jeremyhaberman.raingauge.provider.test;import android.content.ContentUris;import android.content.ContentValues;import android.net.Uri;import android.test.ProviderTestCase2;import android.test.suitebuilder.annotation.MediumTest;import com.jeremyhaberman.raingauge.provider.RainGaugeProvider;import com.jeremyhaberman.raingauge.provider.RainGaugeProviderContract;import com.jeremyhaberman.raingauge.provider.RainGaugeProviderContract.ObservationsTable;public class RainGaugeProviderTest extends ProviderTestCase2<RainGaugeProvider> {	public RainGaugeProviderTest() {		this(RainGaugeProvider.class, RainGaugeProviderContract.AUTHORITY);	}	public RainGaugeProviderTest(Class<RainGaugeProvider> providerClass, String providerAuthority) {		super(providerClass, providerAuthority);	}	@MediumTest	public void testShouldNotInsertForIllegalUri() {		try {			getMockContentResolver().insert(Uri					.parse("content://com.jeremyhaberman.raingauge.raingaugeprovider/invalid"),					null);			fail("Should have thrown IllegalArgumentException");		} catch (IllegalArgumentException e) {			assertTrue(true);		}	}	@MediumTest	public void testShouldNotInsertForIdUri() {		try {			getMockContentResolver()					.insert(ContentUris.withAppendedId(ObservationsTable.CONTENT_URI, 1),							null);			fail("Should have thrown IllegalArgumentException");		} catch (IllegalArgumentException e) {			assertTrue(true);		}	}	@MediumTest	public void testShouldAddValidObservations() {		ContentValues values = new ContentValues();		values.put(ObservationsTable.TIMESTAMP, System.currentTimeMillis());		values.put(ObservationsTable.RAINFALL, 0.5);		Uri observationsUri =				getMockContentResolver().insert(ObservationsTable.CONTENT_URI, values);		assertNotNull(observationsUri);	}	@MediumTest	public void testShouldNotAddObservationsWithNullValues() {		try {			getMockContentResolver().insert(ObservationsTable.CONTENT_URI, null);			fail("Should have thrown IllegalArgumentException");		} catch (IllegalArgumentException e) {			assertTrue(true);		}	}	@MediumTest	public void testShouldNotAddObservationsWithoutTimestamp() {		ContentValues values = new ContentValues();		values.put(ObservationsTable.RAINFALL, 0.5);		try {			getMockContentResolver().insert(ObservationsTable.CONTENT_URI, values);			fail("Should have thrown IllegalArgumentException");		} catch (IllegalArgumentException e) {			assertTrue(true);		}	}}