package com.jeremyhaberman.raingauge.rest.resource;import junit.framework.TestCase;public class ObservationsTest extends TestCase {	public void testObservations() {		Observations observations = Observations.createObservations(0.5);		assertNotNull(observations);	}	public void testNegativeRainfall() {		try {			Observations observations = Observations.createObservations(-1);			fail("should have thrown illegal argument exception");		} catch (IllegalArgumentException e) {			assertTrue(true);		}	}	public void testGetRainfall() {		double expected = 0.5;		Observations observations = Observations.createObservations(expected);		assertEquals(expected, observations.getRainfall());	}	public void testEquals() {		double rainfall = 0.2;		Observations observations1 = Observations.createObservations(rainfall);		Observations observations2 = Observations.createObservations(rainfall);		assertEquals(observations1, observations2);		assertTrue(observations1.equals(observations1));		assertFalse(observations1.equals(null));		assertFalse(observations1.equals(new String()));		assertFalse(observations1.equals(Observations.createObservations(0.3)));	}	public void testHashCode() {		Observations observations1 = Observations.createObservations(0.5);		Observations observations2 = Observations.createObservations(0.5);		Observations observations3 = Observations.createObservations(0.4);		assertTrue(observations1.hashCode() == observations1.hashCode());		assertTrue(observations1.hashCode() == observations2.hashCode());		assertFalse(observations1.hashCode() == observations3.hashCode());	}}